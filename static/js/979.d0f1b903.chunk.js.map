{"version":3,"file":"static/js/979.d0f1b903.chunk.js","mappings":"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","sources":["components/TitleHero/TitleHero.styled.jsx","components/TitleHero/TitleHero.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","views/ContactsView/ContactsView.styled.jsx","views/ContactsView/ContactsView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.p`\n  padding-bottom: 10px;\n  padding-left: 30px;\n  padding-right: 30px;\n  text-align: center;\n\n  font-size: 18px;\n  font-weight: 700;\n`;\n","import { Text } from './TitleHero.styled';\n\nconst TitleHero = () => {\n  return (\n    <Text>\n      Hello! Welcome to our Phonebook app, which contains a list of any names and phone numbers.\n    </Text>\n  );\n};\n\nexport default TitleHero;\n","import styled from 'styled-components';\n\nexport const FormPhoneBook = styled.form`\n  /*  border-color: black;\n  border-style: solid; */\n  padding: 20px;\n  display: flex;\n  height: 195px;\n  flex-direction: column;\n  align-items: flex-start;\n  /* box-shadow: rgb(0 0 0 / 12%) 0px 1px 3px, rgb(0 0 0 / 14%) 0px 1px 1px,\n    rgb(0 0 0 / 20%) 0px 2px 1px;\n  border-radius: 4px; */\n`;\nexport const LabelPhoneBook = styled.label`\n  padding-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  font-size: 15px;\n  font-weight: 500;\n`;\n\nexport const InputPhoneBook = styled.input`\n  margin-top: 5px;\n  padding-left: 10px;\n  font-size: 15px;\n  font-weight: 400;\n`;\n\nexport const ButtonPhoneBook = styled.button`\n  display: block;\n  margin: 0 auto;\n  padding: 5px 20px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  font-size: 16px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  font-weight: 400;\n  background-color: ${props => props.theme.colors.secondPrimary};\n\n  :hover {\n    background-color: royalblue;\n    transition: background-color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n    color: ${props => props.theme.colors.background};\n  }\n`;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { addContacts } from '../../redux/items';\n\nimport { FormPhoneBook, LabelPhoneBook, InputPhoneBook, ButtonPhoneBook } from './Form.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleNameChange = event => {\n    event.preventDefault();\n\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log(`Field type name - ${name} is not processed`);\n    }\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    dispatch(addContacts({ name, number }));\n\n    reset();\n    toast.success('Congratulations, you have created a new contact!', {\n      position: toast.POSITION.TOP_CENTER,\n    });\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormPhoneBook onSubmit={handleSubmit}>\n      <LabelPhoneBook htmlFor={nameInputId}>\n        Name\n        <InputPhoneBook\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"off\"\n          id={nameInputId}\n          value={name}\n          onChange={handleNameChange}\n        />\n      </LabelPhoneBook>\n      <LabelPhoneBook htmlFor={numberInputId}>\n        Number\n        <InputPhoneBook\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          autoComplete=\"off\"\n          id={numberInputId}\n          value={number}\n          onChange={handleNameChange}\n        />\n      </LabelPhoneBook>\n      <ButtonPhoneBook type=\"submit\">Add contact</ButtonPhoneBook>\n    </FormPhoneBook>\n  );\n}\n","import styled from 'styled-components';\n\nexport const LabelFilterStyle = styled.label`\n  padding-bottom: 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 15px;\n  font-weight: 500;\n`;\n\nexport const InputFilterStyle = styled.input`\n  margin-top: 5px;\n  width: 300px;\n  padding-left: 10px;\n  font-size: 15px;\n  font-weight: 400;\n`;\n","import { nanoid } from 'nanoid';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ItemsSlice } from '../../redux/items';\nimport { ItemsSelectors } from '../../redux/items';\nimport { LabelFilterStyle, InputFilterStyle } from './Filter.styled';\n\nconst generateId = nanoid();\n\nconst Filter = () => {\n  const value = useSelector(ItemsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <LabelFilterStyle htmlFor={generateId}>\n      Find contacts by name\n      <InputFilterStyle\n        type=\"text\"\n        name=\"filter\"\n        autoComplete=\"off\"\n        value={value}\n        onChange={e => dispatch(ItemsSlice.changeFilter(e.target.value))}\n        id={generateId}\n      />\n    </LabelFilterStyle>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const ListItemStyle = styled.li`\n  width: 320px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 2px 15px;\n  border: 1px solid green;\n  border-radius: 5px;\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const NameContactStyle = styled.p`\n  margin-right: 10px;\n  font-size: 14px;\n`;\n\nexport const ButtonContactStyle = styled.button`\n  padding: 5px 20px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  font-size: 10px;\n  border-radius: 5px;\n  border: none;\n  color: ${props => props.theme.colors.text};\n  cursor: pointer;\n  font-weight: 400;\n\n  background-color: ${props => props.theme.colors.secondPrimary};\n\n  :hover {\n    background-color: royalblue;\n    transition: background-color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n    color: ${props => props.theme.colors.background};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ImUser } from 'react-icons/im';\n\nimport { ListItemStyle, NameContactStyle, ButtonContactStyle } from './ContactListItem.styled';\n\nconst ContactListItem = ({ data, onDeleteContact }) => {\n  const { number, name } = data;\n\n  /* console.log(data); */\n  return (\n    <ListItemStyle>\n      <ImUser size={12} />\n      <NameContactStyle>{name}:</NameContactStyle>\n      <NameContactStyle>{number}</NameContactStyle>\n      <ButtonContactStyle type=\"button\" onClick={onDeleteContact}>\n        Delete\n      </ButtonContactStyle>\n    </ListItemStyle>\n  );\n};\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  data: PropTypes.shape({\n    number: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListStyle = styled.ul`\n  /* list-style: none; */\n  padding-left: 0px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { ItemsSelectors, fetchContacts, deleteContacts } from '../../redux/items';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { ListStyle } from './ContactList.styled';\n\nconst ContactList = () => {\n  const data = useSelector(ItemsSelectors.getVisibleItems);\n  const dispatch = useDispatch();\n  const onDeleteItems = id => dispatch(deleteContacts(id));\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ListStyle>\n      {data.map(({ name, id, number }) => {\n        return (\n          <ContactListItem\n            key={id}\n            data={{ number, name, id }}\n            onDeleteContact={() => {\n              toast.error('Sorry you deleted the contact!', {\n                position: toast.POSITION.TOP_CENTER,\n              });\n              return onDeleteItems(id);\n            }}\n          />\n        );\n      })}\n    </ListStyle>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\nimport imgPhone from '../../images/phone.png';\n\nexport const TitlePhoneBook = styled.h1`\n  font-size: 35px;\n  font-weight: 700;\n  text-align: center;\n  color: ${props => props.theme.colors.primary};\n  /* padding-top: 5px; */\n  /* padding-bottom: 15px; */\n\n  @-moz-document url-prefix() {\n    font-size: 30px;\n  }\n`;\n\nexport const TitleContacts = styled.h2`\n  padding-bottom: 10px;\n  font-size: 25px;\n  font-weight: 700;\n  text-align: center;\n`;\n\nexport const Section = styled.section`\n  /*  padding-bottom: 30px; */\n  padding-top: 30px;\n  height: 320px;\n  background-image: url(${imgPhone});\n\n  background-repeat: no-repeat;\n  background-size: 240px 320px;\n\n  @-moz-document url-prefix() {\n    background-image: url(${imgPhone});\n\n    background-repeat: no-repeat;\n    background-size: 210px 320px;\n  }\n`;\n\nexport const SectionContact = styled.section`\n  padding-bottom: 30px;\n  /* padding-top: 30px; */\n`;\n\nexport const ContainerList = styled.div`\n  padding: 30px;\n`;\n","/* import { useState } from 'react'; */\n/* import { Routes, Route } from 'react-router-dom'; */\nimport { ToastContainer } from 'react-toastify';\n/* import { HomeView } from './pages/HomeView/HomeView';\nimport { RegisterView } from './pages/RegisterView/RegisterView';\nimport { LoginView } from './pages/LoginView/LoginView';\nimport { ContactsView } from './pages/ContactsView/ContactsView';\n\nimport { UserMenu } from './components/UserMenu/UserMenu'; */\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport TitleHero from '../../components/TitleHero/TitleHero';\nimport ContactForm from '../../components/Form/Form';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\n\n/* import { GlobalStyles } from './App.global.styled'; */\nimport {\n  TitlePhoneBook,\n  TitleContacts,\n  Section,\n  SectionContact,\n  ContainerList,\n} from './ContactsView.styled';\n\nexport function ContactsView() {\n  return (\n    <>\n      <TitleHero />\n      <>\n        <Section>\n          <TitlePhoneBook>Phonebook</TitlePhoneBook>\n          <ContactForm></ContactForm>\n        </Section>\n      </>\n\n      <SectionContact>\n        <div>\n          <TitleContacts>Contacts</TitleContacts>\n\n          <Filter></Filter>\n        </div>\n\n        <ContainerList>\n          <ContactList></ContactList>\n        </ContainerList>\n      </SectionContact>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n\n      <ToastContainer />\n    </>\n  );\n}\n"],"names":["Text","styled","FormPhoneBook","LabelPhoneBook","InputPhoneBook","ButtonPhoneBook","props","theme","colors","secondPrimary","background","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","nameInputId","nanoid","numberInputId","handleNameChange","event","preventDefault","currentTarget","value","console","log","handleSubmit","evt","addContacts","reset","toast","position","onSubmit","htmlFor","type","pattern","title","required","autoComplete","id","onChange","LabelFilterStyle","InputFilterStyle","generateId","useSelector","ItemsSelectors","e","ItemsSlice","target","ListItemStyle","NameContactStyle","ButtonContactStyle","text","data","onDeleteContact","size","onClick","ListStyle","useEffect","fetchContacts","map","deleteContacts","onDeleteItems","TitlePhoneBook","primary","TitleContacts","Section","imgPhone","SectionContact","ContainerList","ContactsView","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}